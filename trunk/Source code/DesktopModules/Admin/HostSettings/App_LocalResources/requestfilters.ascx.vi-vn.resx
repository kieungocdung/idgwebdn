<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmdAdd.Text" xml:space="preserve">
    <value>Thêm Quy Tắc</value>
  </data>
  <data name="cmdCancel.Text" xml:space="preserve">
    <value>Hủy Bỏ</value>
  </data>
  <data name="Delete.Text" xml:space="preserve">
    <value>Xóa Quy Tắc</value>
  </data>
  <data name="Edit.Text" xml:space="preserve">
    <value>Sửa Quy Tắc</value>
  </data>
  <data name="plServerVar.Text" xml:space="preserve">
    <value>Biến Server</value>
  </data>
  <data name="plOperator.Text" xml:space="preserve">
    <value>Toán Tử</value>
  </data>
  <data name="plValue.Text" xml:space="preserve">
    <value>Giá Trị So Sánh</value>
  </data>
  <data name="plAction.Text" xml:space="preserve">
    <value>Hành Động</value>
  </data>
  <data name="plLocation.Text" xml:space="preserve">
    <value>Địa Chỉ</value>
  </data>
  <data name="saveRule.Text" xml:space="preserve">
    <value>Cập Nhật Quy Tắc</value>
  </data>
  <data name="unauthorized.Text" xml:space="preserve">
    <value>Tài khoản ứng dụng không có quyền sửa đổi nội dung file DotNetNuke.config. Lỗi này xuất hiện nếu file DotNetNuke.config được đặt là ReadOnly hoặc nếu tài khoản ứng dụng được cấu hình không có quyền truy cập đến file.</value>
  </data>
  <data name="plAction.Help" xml:space="preserve">
    <value>Chọn hành động cần được thực hiện nếu truy vấn đến phù hợp với quy tắc này.</value>
  </data>
  <data name="plLocation.Help" xml:space="preserve">
    <value>Nhập URL để chuyển đến khi truy vấn phù hợp với quy tắc này. Giá trị này chỉ được sử dụng đối với các hành động Redirect ( chuyển hướng ) và PermanentRedirect</value>
  </data>
  <data name="plOperator.Help" xml:space="preserve">
    <value>Chọn toán tử được dùng để so sánh truy vấn với các biến và giá trị đã được xác định.</value>
  </data>
  <data name="plServerVar.Help" xml:space="preserve">
    <value>Xác định Biến Server (Server Variable) được dùng khi lọc các truy vấn. Một danh sách đầy đủ của các Biến Server có thể được tìm thấy trên MSDN.</value>
  </data>
  <data name="plValue.Help" xml:space="preserve">
    <value>Định nghĩa giá trị của biến server được dùng để gọi ra quy tắc. Đối với một quy tắc regex, giá trị là một regular expression được sử dụng với vai trò là một biểu thức so sánh ( matching expression ). Nếu không phải là một toán tử regex, giá trị có thể là một danh sách các giá trị ngăn cách nhau bởi dấu phảy.</value>
  </data>
  <data name="lblServerVarLink.Text" xml:space="preserve">
    <value>Đến &lt;a href="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/iissdk/html/21b3be8f-d4ed-4059-8e21-6cba2c253006.asp" class="CommandButton" target="_blank" &gt;MSDN&lt;/a&gt; để xem danh sách các biến số.</value>
  </data>
  <data name="lblWarning.Text" xml:space="preserve">
    <value>LƯU Ý:  Tạo ra một quy tắc lọc truy vấn không đúng có thể ngăn cản bạn hoặc khách hàng của bạn truy cập đến website DotNetNuke của bạn, và bạn có thể sẽ phải sửa đổi file DotNetNuke.config để loại bỏ mục quy tắc không đúng đó.</value>
  </data>
</root>