<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblTitle.Text" xml:space="preserve">
    <value>Tiêu Đề</value>
  </data>
  <data name="lblTitle.Help" xml:space="preserve">
    <value>Xác định tiêu đề báo cáo ở đây</value>
  </data>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>Thiết Lập Báo Cáo</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;h1&gt;Trang Thiết Lập Báo Cáo&lt;/h1&gt;
    &lt;p&gt;
        Ở trang Thiết Lập, người dùng có thể đặt Tiêu đề cho Báo cáo, được hiển thị sau icon "?" ở trên đầu. Thay đổi Mô tả của Báo cáo sẽ thay đổi đoạn chữ được hiển thị khi icon "?" được click để mở rộng tiêu đề. Thiết lập Truy vấn sẽ thay đổi cách thức truy vấn SQL để tạo ra lưới dữ liệu. Lưu ý là tên cột trả về bởi Truy vấn được dùng để tạo nên tiêu đề của lưới, sử dụng từ khóa SQL "AS" để cho một cột một tiêu đề mới. Cuối cùng, dưới các thiết lập Hiển Thị, người dùng có thể chọn để cho phép hay không cho phép sắp xếp hay phân trang. Nếu chọn phân trang, người dùng có thể nhập vào cỡ trang.
    &lt;/p&gt;
&lt;h1&gt;Về Module Báo Cáo&lt;/h1&gt;
    &lt;p&gt;
        Module Báo cáo dựng nên một lưới đơn giản dựa vào kết quả của một truy vấn SQL được nhập vào ở trang Thiết Lập Module. Các thành viên có quyền truy cập đến module này có thể mở trang Thiết Lập và thay đổi Tiêu đề, nhập một mô tả ngắn gọn cho module và đặt Truy vấn SQL được dùng để tạo ra lưới. Tùy thuộc vào Thiết Lập Hiển Thị được chọn cho module, các thành viên với quyền truy cập Hiển thị có thể sắp xếp và phân trang kết quả.&lt;/p&gt;</value>
  </data>
  <data name="DataSource.Section" xml:space="preserve">
    <value>Thiết Lập Nguồn Dữ Liệu</value>
  </data>
  <data name="Display.Section" xml:space="preserve">
    <value>Thiết Lập Hiển Thị</value>
  </data>
  <data name="lblDescription.Help" xml:space="preserve">
    <value>Đưa ra một mô tả ngắn gọn về báo cáo ở đây</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Mô Tả</value>
  </data>
  <data name="lblQuery.Help" xml:space="preserve">
    <value>Xác định Truy vấn SQL để xây dựng báo cáo ở đây</value>
  </data>
  <data name="lblQuery.Text" xml:space="preserve">
    <value>Truy Vấn</value>
  </data>
  <data name="lblPageData.Help" xml:space="preserve">
    <value>Chọn để cho phép phân trang</value>
  </data>
  <data name="lblPageData.Text" xml:space="preserve">
    <value>Cho Phép Phân Trang?</value>
  </data>
  <data name="lblPageSize.Help" xml:space="preserve">
    <value>Xác định số bản ghi trên một trang dữ liệu</value>
  </data>
  <data name="lblPageSize.Text" xml:space="preserve">
    <value>Cỡ Trang</value>
  </data>
  <data name="lblSortData.Help" xml:space="preserve">
    <value>Chọn để cho phép sắp xếp</value>
  </data>
  <data name="lblSortData.Text" xml:space="preserve">
    <value>Cho Phép Sắp Xếp?</value>
  </data>
  <data name="SuperUsersOnly.Text" xml:space="preserve">
    <value>Chỉ Tài Khoản Host được phép sửa đổi thiết lập Nguồn Dữ Liệu cho Báo Cáo</value>
  </data>
  <data name="lblShowHeader.Help" xml:space="preserve">
    <value>Chọn để hiển thị phần header (tên cột) của báo cáo</value>
  </data>
  <data name="lblShowHeader.Text" xml:space="preserve">
    <value>Hiển Thị Header?</value>
  </data>
  <data name="CacheFor.Text">
    <value>Cache dữ liệu cho</value>
  </data>
  <data name="lblCacheDuration.Help">
    <value>Xác định có cho phép caching hay không và trong bao lâu, theo phút, kết quả của truy vấn được cache.</value>
  </data>
  <data name="lblCacheDuration.Text">
    <value>Caching </value>
  </data>
  <data name="lblRenderer.Help">
    <value>Lựa chọn Visualizer để hiển thị dữ liệu từ báo cáo này. Thiết lập này có thể khác biệt giữa các instance của module Báo cáo trên các trang khác nhau</value>
  </data>
  <data name="lblRenderer.Text">
    <value>Visualizer</value>
  </data>
  <data name="Minutes.Text">
    <value>phút</value>
  </data>
  <data name="Visualizer.Text">
    <value>{0} Visualizer </value>
  </data>
  <data name="WarningMessage.Text">
    <value>Lưu ý! Bất cứ ai xem được module này đều có thể xem kết quả của báo cáo. Các truy vấn được nhập vào ở đây có thể lấy dữ liệu từ bất cứ bảng nào trong cơ sở dữ liệu, hãy lưu ý đến các vấn đề về quyền riêng tư và bảo mật khi viết chúng.</value>
  </data>
</root>