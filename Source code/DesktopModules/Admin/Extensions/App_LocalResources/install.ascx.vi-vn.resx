<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LogTitle.Text" xml:space="preserve">
    <value>Nhật Ký Cài Đặt Gói</value>
  </data>
  <data name="Cancel.Text" xml:space="preserve">
    <value>Trở Về</value>
  </data>
  <data name="InvalidExt.Text" xml:space="preserve">
    <value>Kiểu file không hợp lệ:</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;h1&gt;Về việc cài đặt gói&lt;/h1&gt;&lt;p&gt;Cho phép bạn tải lên và cài đặt các gói cho portal.&lt;/p&gt;</value>
  </data>
  <data name="NoFile.Text" xml:space="preserve">
    <value>Bạn cần phải lựa chọn một file để tải lên - click nút Browse để tìm đến file trên máy tính của bạn.</value>
  </data>
  <data name="InstallCustomPackage.Text" xml:space="preserve">
    <value>Cài Đặt Gói {0} Mới</value>
  </data>
  <data name="InstallPackage.Text" xml:space="preserve">
    <value>Cài đặt gói mới</value>
  </data>
  <data name="UploadPackage.Text" xml:space="preserve">
    <value>Tải Lên Gói</value>
  </data>
  <data name="AcceptLicense.Text" xml:space="preserve">
    <value>Chấp Nhận Giấy Phép?</value>
  </data>
  <data name="Introduction.Help" xml:space="preserve">
    <value>DotNetNuke có thể được mở rộng theo nhiều cách. Quá trình này giúp bạn tải lên và cài đặt các gói DotNetNuke.&lt;br/&gt;&lt;br/&gt;Bước đầu tiên là lựa chọn gói bạn muốn cài đặt có trên máy tính của bạn.  Click nút Browse để lựa chọn .&lt;br/&gt;&lt;br/&gt;Khi bạn đã chọn được gói file, click nút Tiếp để chuyển sang bước tiếp theo.</value>
  </data>
  <data name="Introduction.Title" xml:space="preserve">
    <value>Cài đặt gói mới</value>
  </data>
  <data name="ZipCriticalError.Text" xml:space="preserve">
    <value>Lỗi nghiêm trọng xảy ra khi đọc file zip</value>
  </data>
  <data name="ZipError.Text" xml:space="preserve">
    <value>Có lỗi xảy ra khi đọc file zip - xem dưới đây</value>
  </data>
  <data name="AcceptTerms.Text" xml:space="preserve">
    <value>Bạn phải chấp nhận các điều khoản của giấy phép để có thể cài đặt gói này.</value>
  </data>
  <data name="InstallError.Text" xml:space="preserve">
    <value>Có lỗi xảy ra trong khi nạp các file từ thư mục tạm - xem dưới đây</value>
  </data>
  <data name="InstallResults.Help" xml:space="preserve">
    <value>Gói đã được cài đặt thành công - xem dưới đây</value>
  </data>
  <data name="InstallResults.Title" xml:space="preserve">
    <value>Cài Đặt Gói Thành Công</value>
  </data>
  <data name="PackageInfo.Help" xml:space="preserve">
    <value>Các thông tin sau đã được tìm thấy trong mô tả của gói.</value>
  </data>
  <data name="PackageInfo.Title" xml:space="preserve">
    <value>Thông Tin Gói</value>
  </data>
</root>